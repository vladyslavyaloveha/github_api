basePath: /github
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple Github scrapper server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fetching Github Example API
  version: "1.0"
paths:
  /{owner}/{name}:
    get:
      parameters:
      - description: Repository Owner
        in: path
        name: owner
        required: true
        type: string
      - description: Repository Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Retrieves repository info based on given name
  /{owner}/{name}/commits:
    get:
      parameters:
      - description: Repository Owner
        in: path
        name: owner
        required: true
        type: string
      - description: Repository Name
        in: path
        name: name
        required: true
        type: string
      - description: 'Commit Author: GitHub login or email address'
        in: query
        name: author
        type: string
      - description: 'Since timestamp: 2020-05-25T06:34:16Z'
        in: query
        name: since
        type: string
      - description: 'Until timestamp: 2020-05-25T06:34:16Z'
        in: query
        name: until
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Retrieves commits based on given repository name
  /{owner}/{name}/issues:
    get:
      parameters:
      - description: Repository Owner
        in: path
        name: owner
        required: true
        type: string
      - description: Repository Name
        in: path
        name: name
        required: true
        type: string
      - description: Issue State
        enum:
        - all
        - open
        - closed
        in: query
        name: state
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Retrieves issues on given repository name
  /repositories:
    get:
      parameters:
      - description: Pass json with keyword owners and array with values
        in: query
        name: owners
        required: true
        type: string
      - description: Max concurrent requests (1-100), default=5
        in: query
        maximum: 100
        minimum: 1
        name: max_requests
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Retrieves repositories based on given owners names
swagger: "2.0"
